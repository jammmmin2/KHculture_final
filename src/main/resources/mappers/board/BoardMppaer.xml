<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.khculture.board.model.dao.BoardMapper">



<resultMap id="boardResultMap" type="com.kh.khculture.board.model.vo.Board">
	<id property="b_no" column="B_NO"/>
	<result property="b_title" column="B_TITLE"/>
	<result property="b_content" column="B_CONTENT"/>
	<result property="m_no" column="M_NO"/>
	<result property="lr_no" column="LR_NO"/>
	<result property="b_enroll_date" column="B_ENROLL_DATE"/>
	<result property="b_modify_date" column="B_MODIFY_DATE"/>
	<result property="b_status" column="B_STATUS"/>
	<result property="b_count" column="B_COUNT"/>
	<result property="b_star" column="B_STAR"/>
	<result property="sum_b_star" column="SUM_B_STAR"/>
	<association property="lectureOpen" resultMap="selectListResultMap"/>
	<collection property="replyList" resultMap="ReplyListResultMap"/>
</resultMap>

<!-- lectureOpen -->
<resultMap type="com.kh.khculture.lecture.model.vo.LectureOpen" id="selectListResultMap">
		<id property="lrNo" column="lr_no"></id>
		<result property="lrCapacity" column="lr_capacity"></result>
		<result property="lrCount" column="LR_COUNT"></result>
		<result property="lrFee" column="LR_FEE"></result>
		<result property="lrStartDate" column="LR_START_DATE"></result>
		<result property="lrEndDate" column="LR_END_DATE"></result>
		<result property="lrNumber" column="LR_NUMBER"></result>
		<result property="lrDay" column="LR_DAY"></result>
		<result property="lrStartTime" column="LR_START_TIME"></result>
		<result property="lrEndTime" column="LR_END_TIME"></result>
		<association property="lecture" resultMap="lectureResultMap"/>
</resultMap>
<resultMap type="com.kh.khculture.lecture.model.vo.Lecture" id="lectureResultMap">
		<id property="lNo" column="l_no"></id>
		<result property="lTitle" column="l_title"></result>
		<result property="lContent" column="l_content"></result>
		<result property="lThumbnail" column="l_thumbnail"></result>
		<result property="lcNo" column="LC_NO"></result>
		<result property="ltNo" column="lT_NO"></result>
</resultMap>

<!-- Reply -->
<resultMap  type="com.kh.khculture.board.model.vo.Reply" id="ReplyListResultMap" >
	<id property="r_no" column="R_NO"/> 
	<result property="r_content" column="R_CONTENT"/>
	<result property="r_enroll_date" column="R_ENROLL_DATE"/>
	<result property="r_modify_date" column="R_MODIFY_DATE"/>
	<result property="n_no" column="N_NO"/>
	<result property="b_no" column="B_NO"/>
	<result property="r_status" column="R_STATUS"/>
	<result property="m_no" column="REF_M_NO"/>
	<result property="name" column="REF_M_NAME"/>
</resultMap>

<!-- 좋아요  -->
<resultMap id="lovitResultMap" type="com.kh.khculture.board.model.vo.Lovit">
	<id property="b_no" column="B_NO"/>
	<id property="m_no" column="M_NO"/>
</resultMap>


<!-- 총 게시물 수 
<select id="getListCount" resultType="_int" >
select count(*) from board where b_status='Y'
</select>
--> 
<!-- 페이징할 게시글 수
<select id="selectList" resultMap="boardResultMap">

SELECT
    B_NO
    , B_TITLE
    , B_CONTENT
    , B_ENROLL_DATE
    , B_MODIFY_DATE
    , B_STAR
    , M_NO
FROM ( SELECT 
               ROWNUM RNUM, NLIST.*
             FROM(  SELECT 
                            *
                         FROM BOARD 	
                         JOIN MEMBER_ROLE USING(M_NO)
                         WHERE B_STATUS='Y' 
                            ORDER BY B_NO DESC) NLIST )
WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }  

SELECT
    B_NO
    , B_TITLE
    , B_CONTENT
    , B_ENROLL_DATE
    , B_MODIFY_DATE
    , B_STAR
    , M_NO
    , lr_no 
    , l_title
    
FROM ( SELECT 
               ROWNUM RNUM, NLIST.*
             FROM(  SELECT 
                            *
                         FROM BOARD 
                         join lecture_registration using (lr_no)
                         join lecture using (l_no)
                         WHERE B_STATUS='Y' 
                            ORDER BY B_NO DESC) NLIST )
WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }  


</select>
 -->
 <!-- ***********************************************  다시 시작 ********************************************************************* -->

<select id="getListCount" parameterType="_int" resultType="_int">
select 
	count(*) 
from BOARD 
join lecture_registration using (lr_no)
join lecture using (l_no)
where b_status='Y'
<if test="searchCondition == 'title'">
and b_title like '%' || #{ searchValue } || '%'
</if>
<if test="searchCondition == 'lectureTitle'">
and l_title like '%' || #{ searchValue } || '%'
</if>

</select>
<select id="selectList" resultMap="boardResultMap">
select
    b_no
    , b_title
    , b_content
    , b_enroll_date
    , b_modify_date
    , b_star
    , m_no
    , l_title
from ( SELECT 
               ROWNUM RNUM, NLIST.*
             FROM(  SELECT 
                            *
                         FROM BOARD 
                         join lecture_registration using (lr_no)
                         join lecture using (l_no)
                         WHERE B_STATUS='Y'
                        <if test="searchCondition == 'title'">
                             and  b_title like '%' || #{ searchValue } || '%'
                        </if>
                        <if test="searchCondition == 'lectureTitle'">
                             and  l_title like '%' || #{ searchValue } || '%'
                        </if>
                            ORDER BY B_NO DESC) NLIST )
WHERE RNUM BETWEEN #{ startRow } AND #{ endRow }  
           
</select>


















 <!-- ******************************************************************************************************************** -->

<!-- 후기 상세보기 -->
<select id="selectBoard" resultMap="boardResultMap">
	
   SELECT
		B.B_NO
		, B.B_TITLE
		, B.B_CONTENT
		, B.M_NO
		, B.B_ENROLL_DATE
		, B.B_COUNT
		, B.B_STAR
		, B.B_STATUS
        , A.R_NO
        , A.R_ENROLL_DATE
		, A.M_NO REF_M_NO
		, concat(   SUBSTR (   (SELECT NAME FROM MEMBER WHERE M_NO = A.M_NO)  ,  1  ,  1  )  ,'*')  
		                   || SUBSTR (   (SELECT NAME FROM MEMBER WHERE M_NO = A.M_NO)  ,  3 ,  2  )REF_M_NAME
        , A.R_CONTENT
        , A.R_STATUS
	FROM BOARD B
	LEFT JOIN REPLY A ON(A.B_NO = B.B_NO)
   WHERE B.B_STATUS='Y'
     AND B.B_NO = #{ b_no }
   ORDER BY A.R_NO DESC

</select>
 
 <!-- 후기 작성  -->
<insert id="boardInsert" parameterType="com.kh.khculture.board.model.vo.Board">
    INSERT
    INTO BOARD
    (
     B_NO
    ,B_TITLE
    ,B_CONTENT
    ,M_NO
    ,LR_NO
    ,B_ENROLL_DATE
    ,B_STATUS
    ,B_COUNT
    ,B_STAR
    )
    VALUES
    (
      
      SEQ_BOARD_NO.NEXTVAL
    , #{ b_title }
    , #{ b_content }
    , #{ m_no }
    , #{ lr_no }
    , SYSDATE
    , DEFAULT
    , #{ b_count }
    , #{ b_star }

 )

</insert>

<!-- 후기 Lovit테이블에 추가  -->
<insert id="insertlovit" parameterType="com.kh.khculture.board.model.vo.Lovit">
INSERT
INTO LOVIT
(
	M_NO
	,B_NO
 )
VALUES
(
	 #{ m_no }
	 ,#{ b_no }
 )

</insert>

<!-- 후기 Lovit테이블에 삭제 -->
<delete id="likedelete" parameterType="com.kh.khculture.board.model.vo.Lovit">
DELETE FROM LOVIT
 WHERE B_NO = #{ b_no }  AND  M_NO = #{ m_no }

</delete>

<!--  후기 좋아요를 눌렀는지 확인 -->
<select id="selectLovit" resultType="_int">
SELECT
count(*)
FROM LOVIT
WHERE M_NO = #{ mno } and B_NO = #{ b_no }   <!-- 리턴타입을 맞춰야됨... 리턴타입..? vo에 넣어준다는.. -->
</select>
 
<select id="rankList" resultMap="boardResultMap">
<!-- 30일 사이에 끝난 강좌중, 최근 2일동안 후기로 작성된 강좌의 랭킹  -->
SELECT
 LR_NO
 ,L_TITLE
 ,L_THUMBNAIL
 ,LR_END_DATE
 , SUM_B_STAR
FROM  (
	SELECT                                 
		LR_NO
		,SUM(B_STAR) SUM_B_STAR
		FROM BOARD 
		JOIN LECTURE_REGISTRATION USING(LR_NO)
		JOIN LECTURE USING (L_NO)
		<![CDATA[ where B_ENROLL_DATE  between sysdate-7 and sysdate ]]>
	GROUP BY LR_NO  )
JOIN LECTURE_REGISTRATION USING(LR_NO)
JOIN LECTURE USING(L_NO)
<![CDATA[ where (LR_END_DATE  between sysdate-30 and sysdate) 
AND  ROWNUM  <=3 ]]>
ORDER BY 5 DESC

</select>
<select id="updateBoardView" resultMap="boardResultMap">
SELECT
 B_NO
 ,B_TITLE
 ,B_CONTENT
 ,B_STAR
 ,M_NO
 ,LR_NO
 ,L_TITLE
 ,L_THUMBNAIL
 ,B_STATUS
 FROM BOARD
 JOIN LECTURE_REGISTRATION  USING(LR_NO)
 JOIN LECTURE USING (L_NO)
 WHERE B_NO= #{ b_no }
</select>

<update id="boardUpdate"  parameterType="com.kh.khculture.board.model.vo.Board" >
 UPDATE 
 BOARD
 SET B_TITLE = #{ b_title } , B_CONTENT = #{ b_content }
 where B_NO = #{ b_no }

</update>
<delete id="boardDelete" parameterType="com.kh.khculture.board.model.vo.Board">
UPDATE
BOARD
SET B_STATUS ='N'
WHERE B_NO = #{ b_no }

</delete>

<insert id="replyInsert" parameterType="com.kh.khculture.board.model.vo.Reply">
 INSERT
    INTO REPLY
    (
    R_NO
    ,R_CONTENT
    ,R_ENROLL_DATE
    ,R_MODIFY_DATE
    ,N_NO
    ,B_NO
    ,R_STATUS
    ,M_NO
    )
    VALUES(
    SEQ_R_NO.nextval
    , #{ r_content }
    , SYSDATE
    ,''
    ,''
    , #{ b_no }
    , DEFAULT
    , #{ m_no } 
	)
</insert>
<select id="selectReplyList" resultMap="ReplyListResultMap">
SELECT
		B.B_NO
		, B.B_TITLE
		, B.B_CONTENT
		, B.M_NO
		, B.B_ENROLL_DATE
		, B.B_COUNT
		, B.B_STAR
		, B.B_STATUS
        , A.R_NO
        , A.R_ENROLL_DATE
		, A.M_NO REF_M_NO
		,concat(   SUBSTR (   (SELECT NAME FROM MEMBER WHERE M_NO = A.M_NO)  ,  1  ,  1  )  ,'*')  || SUBSTR (   (SELECT NAME FROM MEMBER WHERE M_NO = A.M_NO)  ,  3 ,  2  ) REF_M_NAME
        , A.R_CONTENT
        , A.R_STATUS
	FROM BOARD B
	LEFT JOIN REPLY A ON(A.B_NO = B.B_NO)
   WHERE B.B_STATUS='Y'
     AND A.R_STATUS='Y'
     AND B.B_NO = #{ b_no }
   ORDER BY A.R_NO DESC

</select>

<update id="replyDelete" parameterType="com.kh.khculture.board.model.vo.Reply" >
update
Reply
set r_status = 'N'
where r_no = #{ rno }


</update>
</mapper>