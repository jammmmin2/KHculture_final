<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.khculture.admin.model.dao.AdminMapper">
	<resultMap type="com.kh.khculture.member.model.vo.Member" id="memberResultMap">
		<id property="mno" column="M_NO"/>
		<result property="id" column="ID"/>
		<result property="pwd" column="PWD"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="hintNo" column="HINT_NO"/>
		<result property="hintA" column="HINT_A"/>
		<result property="enrollDate" column="M_ENROLL_DATE"/>
		<result property="modifyDate" column="M_MODIFY_DATE"/>
		<result property="pwdChangedDate" column="PWD_CHANGED_DATE"/>
		<result property="pwdExpDate" column="PWD_EXP_DATE"/>
		<result property="loginFailedCnt" column="LOGIN_FAILED_COUNT"/>	
		<result property="accLockYN" column="ACC_LOCK_YN"/>	
		<result property="accSecessionYN" column="ACC_SECESSION_YN"/>	
		<result property="accSecessionDate" column="ACC_SECESSION_DATE"/>	
		<collection property="memberRoleList" resultMap="memberRoleResultMap"/>
	</resultMap>
	
	<resultMap type="com.kh.khculture.member.model.vo.MemberRole" id="memberRoleResultMap">
		<id property="mno" column="REF_M_NO"/>
		<id property="authorityCode" column="REF_AUTHORITY_CODE"/>
		<!-- <association property="authority" resultMap="authorityResultMap"/> -->
	</resultMap>
	
	<!-- <resultMap type="com.kh.khculture.member.model.vo.Authority" id="authorityResultMap">
		<id property="authorityCode" column="REF_AUTHORITY_CODE2"/>
		<result property="authorityName" column="AUTHORITY_NAME"/>
		<result property="authorityDesc" column="AUTHORITY_DESC"/>
	</resultMap>
 -->	
	<select id="getPageMemberList" resultMap="memberResultMap" parameterType="com.kh.khculture.admin.model.vo.Search">
		SELECT *
		  FROM (
			SELECT
					ROWNUM RNUM, A.*
			  FROM (
					SELECT
							M_NO
						  , ID
						  , NAME
						  , PHONE
						  , EMAIL
						  , ADDRESS
						  , M_ENROLL_DATE
						  , ACC_LOCK_YN
						  , ACC_SECESSION_YN
						  , AUTHORITY_CODE
					  FROM MEMBER
					  JOIN MEMBER_ROLE USING(M_NO)
					<where>
					<choose>
					<when test="authorityCode == 0">
					 	AUTHORITY_CODE = 1
					</when>
					<when test="authorityCode == 1">
						ID NOT IN (SELECT ID
									 FROM MEMBER
									 JOIN MEMBER_ROLE USING(M_NO)
									WHERE AUTHORITY_CODE IN (2, 3))
					</when>
					<when test="authorityCode == 2">
						AUTHORITY_CODE = 2
					</when>
					</choose>
					<if test="accLockYN != null">
						AND ACC_LOCK_YN = #{accLockYN}
					</if>
					<if test="accSecessionYN != null">
						AND ACC_SECESSION_YN = #{accSecessionYN}
					</if>
					<if test="searchDate != null and accSecession == 'Y'">
						AND ACC_SECESSION_DATE &lt; #{searchDate}
					</if>
					<if test="searchKeyword != null">
						AND ID LIKE '%' || #{searchKeyword} || '%'
					</if>
					</where>
					 ORDER BY M_NO DESC
					 ) A
				)
 		 WHERE RNUM BETWEEN #{startRow} and #{endRow}
	</select>
	
	<select id="getAllMemberList" resultMap="memberResultMap" parameterType="com.kh.khculture.admin.model.vo.Search">
		SELECT *
		  FROM (
			SELECT
					ROWNUM RNUM, A.*
			  FROM (
					SELECT
							M_NO
						  , ID
						  , NAME
						  , PHONE
						  , EMAIL
						  , ADDRESS
						  , M_ENROLL_DATE
						  , ACC_LOCK_YN
						  , ACC_SECESSION_YN
						  , AUTHORITY_CODE
						  , AUTHORITY_CODE REF_AUTHORITY_CODE
					  FROM MEMBER
					  JOIN MEMBER_ROLE USING(M_NO)
					<where>
					<choose>
					<when test="authorityCode == 0">
					 	AUTHORITY_CODE = 1
					</when>
					<when test="authorityCode == 1">
						ID NOT IN (SELECT ID
									 FROM MEMBER
									 JOIN MEMBER_ROLE USING(M_NO)
									WHERE AUTHORITY_CODE IN (2, 3))
					</when>
					<when test="authorityCode == 2">
						AUTHORITY_CODE = 2
					</when>
					</choose>
					<if test="accLockYN != null">
						AND ACC_LOCK_YN = #{accLockYN}
					</if>
					<if test="accSecessionYN != null">
						AND ACC_SECESSION_YN = #{accSecessionYN}
					</if>
					<if test="searchDate != null and accSecession == 'Y'">
						AND ACC_SECESSION_DATE &lt; #{searchDate}
					</if>
					<if test="searchKeyword != null">
						AND ID LIKE '%' || #{searchKeyword} || '%'
					</if>
					</where>
					 ORDER BY M_NO DESC
					 ) A
				)
	</select>
	
	<select id="getSearchListCount" resultType="_int" parameterType="com.kh.khculture.admin.model.vo.Search">
		SELECT COUNT(*)
		  FROM MEMBER
		  JOIN MEMBER_ROLE USING(M_NO)
		<where>
			<choose>
			<when test="authorityCode == 0">
			 	AUTHORITY_CODE = 1
			</when>
			<when test="authorityCode == 1">
				ID NOT IN (SELECT ID
							 FROM MEMBER
							 JOIN MEMBER_ROLE USING(M_NO)
							 WHERE AUTHORITY_CODE IN (2, 3))
			</when>
			<when test="authorityCode == 2">
				AUTHORITY_CODE = 2
			</when>
			</choose>
			<if test="accLockYN != null">
				AND ACC_LOCK_YN = #{accLockYN}
			</if>
			<if test="accSecessionYN != null">
				AND ACC_SECESSION_YN = #{accSecessionYN}
			</if>
			<if test="searchDate != null">
				AND ACC_SECESSION_DATE &lt; #{searchDate}
			</if>
			<if test="searchKeyword != null">
				AND ID LIKE '%' || #{searchKeyword} || '%'
			</if>
		</where>
	</select>
	
	<!-- 전체 회원 수 -->
	<select id="getListCount" resultType="_int" parameterType="com.kh.khculture.admin.model.vo.Search">
		SELECT COUNT(*)
		  FROM MEMBER A
		  JOIN MEMBER_ROLE B ON(A.M_NO = B.M_NO)
		 WHERE B.AUTHORITY_CODE = 1
	</select>
	
	<update id="pwdReset" parameterType="hashMap">
		UPDATE MEMBER
		   SET PWD = #{newPwd}
		 WHERE M_NO = #{mno}
	</update>
	
	<delete id="deleteAcc" parameterType="hashMap">
		DELETE FROM MEMBER
		 WHERE M_NO = #{mno}
	</delete>
	
	<delete id="deleteRole" parameterType="hashMap">
		DELETE FROM MEMBER_ROLE
		 WHERE M_NO = #{mno}
	</delete>
	<insert id="insertRole1" parameterType="hashMap">
		INSERT INTO MEMBER_ROLE
			(
				M_NO
			  , AUTHORITY_CODE
			)
		VALUES
			(
				#{mno}
			  , 1
			)
	</insert>
	<insert id="insertRole2" parameterType="hashMap">
		INSERT INTO MEMBER_ROLE
			(
				M_NO
			  , AUTHORITY_CODE
			)
		VALUES
			(
				#{mno}
			  , 2
			)
	</insert>
</mapper>